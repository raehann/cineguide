/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cineguide;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Random;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import table.TableCustom;

/**
 *
 * @author USER
 */
public class UserMenu extends javax.swing.JFrame {
    Koneksi k = new Koneksi();
    private PreparedStatement stat;
    private ResultSet rs;
    private DefaultTableModel model = null;
    private String filename;
    private String id, nama, username, email, password, foto= null;
     private HashMap<String, String> columnMapping;
    private String currentSortColumn;
    private boolean isAscending;
    private int currentPage = 1;
    private Integer rowsPerPage = 10;

    /**
     * Creates new form UserMenu
     */
    Color panDefault, panEnter, panDelete;
    private String judul,tahun,negara,genre,pemeran, sinopsis, posterfilm;
    public UserMenu() {
        initComponents();
        k.connect();
        tampilTable(currentPage);
        lebarKolom();
        panEnter = new Color(255,96,0);
        panDefault = new Color(69,69,69);
        panDelete = new Color(237,43,42);
        table.TableCustom.apply(scrollPaneWin111, TableCustom.TableType.MULTI_LINE);
        columnMapping = new HashMap<>();
        columnMapping.put("Judul", "judul");
        columnMapping.put("Tahun", "tahun");
        columnMapping.put("Negara", "Negara");
        columnMapping.put("Genre", "genre");
        columnMapping.put("Pemeran Utama", "pemeran_utama");
        currentSortColumn = ""; // Kolom sorting awal kosong
        isAscending = true; // Sorting awal secara ascending
        infoLabel.setText("<html>CineGuide adalah aplikasi informasi film yang komprehensif yang dikembangkan menggunakan Java NetBeans. Aplikasi ini dirancang untuk memberikan pengguna akses ke informasi terperinci tentang film-film terbaru, termasuk judul, tahun rilis, aktor, sinopsis, negara, dan banyak lagi. Dengan CineGuide, pengguna dapat dengan mudah menelusuri daftar film yang tersedia, mencari film berdasarkan genre atau kata kunci, dan mendapatkan informasi lengkap tentang film yang menarik minat mereka.<html>");
        txtNama.setEditable(false);
        txtUsername.setEditable(false);
        txtEmail.setEditable(false);
        txtPassword.setEditable(false);
        btnFoto.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        genreFilm = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        home = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        profile = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        info = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        logout = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        scrollPaneWin111 = new raven.scroll.win11.ScrollPaneWin11();
        tblHome = new javax.swing.JTable();
        imageLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        tahunLabel = new javax.swing.JLabel();
        sinopsisLabel = new javax.swing.JLabel();
        txtCari = new textfield.TextField();
        btnSort = new javax.swing.JButton();
        comboSort = new combobox.Combobox();
        btnFirst = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        rowsPerPageComboBox = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        profilePanel = new javax.swing.JPanel();
        txtNama = new cineguide.TextField();
        txtUsername = new cineguide.TextField();
        txtEmail = new cineguide.TextField();
        txtPassword = new cineguide.PasswordField();
        jLabel23 = new javax.swing.JLabel();
        labelFoto = new javax.swing.JLabel();
        btnFoto = new javax.swing.JButton();
        btnSimpan = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtID = new cineguide.TextField();
        infoPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bodyPanel.setBackground(new java.awt.Color(255, 255, 255));

        menuPanel.setBackground(new java.awt.Color(255, 165, 89));

        genreFilm.setBackground(new java.awt.Color(69, 69, 69));

        javax.swing.GroupLayout genreFilmLayout = new javax.swing.GroupLayout(genreFilm);
        genreFilm.setLayout(genreFilmLayout);
        genreFilmLayout.setHorizontalGroup(
            genreFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        genreFilmLayout.setVerticalGroup(
            genreFilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Schadow BT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(69, 69, 69));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo (4).png"))); // NOI18N
        jLabel1.setText("CineGuide");

        home.setBackground(new java.awt.Color(255, 165, 89));
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeMousePressed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-home-30.png"))); // NOI18N
        jLabel2.setText("Home");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        profile.setBackground(new java.awt.Color(255, 165, 89));
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-male-user-30.png"))); // NOI18N
        jLabel3.setText("Profile");

        javax.swing.GroupLayout profileLayout = new javax.swing.GroupLayout(profile);
        profile.setLayout(profileLayout);
        profileLayout.setHorizontalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        profileLayout.setVerticalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        info.setBackground(new java.awt.Color(255, 165, 89));
        info.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-info-30.png"))); // NOI18N
        jLabel5.setText("Info Aplikasi");

        javax.swing.GroupLayout infoLayout = new javax.swing.GroupLayout(info);
        info.setLayout(infoLayout);
        infoLayout.setHorizontalGroup(
            infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        infoLayout.setVerticalGroup(
            infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        logout.setBackground(new java.awt.Color(255, 165, 89));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-logout-30.png"))); // NOI18N
        jLabel6.setText("Logout");

        javax.swing.GroupLayout logoutLayout = new javax.swing.GroupLayout(logout);
        logout.setLayout(logoutLayout);
        logoutLayout.setHorizontalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6)
        );
        logoutLayout.setVerticalGroup(
            logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(genreFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(207, 207, 207)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genreFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.CardLayout());

        homePanel.setBackground(new java.awt.Color(255, 255, 255));
        homePanel.setPreferredSize(new java.awt.Dimension(1125, 561));

        scrollPaneWin111.setBackground(new java.awt.Color(255, 255, 255));

        tblHome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblHome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Judul", "Tahun", "Negara", "Genre", "Pemeran", "Sinopsis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblHome.setGridColor(new java.awt.Color(255, 255, 255));
        tblHome.setOpaque(false);
        tblHome.setRowHeight(50);
        tblHome.getTableHeader().setResizingAllowed(false);
        tblHome.getTableHeader().setReorderingAllowed(false);
        tblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHomeMouseClicked(evt);
            }
        });
        scrollPaneWin111.setViewportView(tblHome);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        tahunLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tahunLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        txtCari.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCari.setLabelText("Cari");
        txtCari.setLineColor(new java.awt.Color(255, 96, 0));
        txtCari.setSelectionColor(new java.awt.Color(255, 165, 89));
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });

        btnSort.setBackground(new java.awt.Color(255, 255, 255));
        btnSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-sort-24.png"))); // NOI18N
        btnSort.setBorder(null);
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        comboSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Judul", "Tahun", "Negara", "Genre", "Pemeran Utama" }));
        comboSort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboSort.setLabeText("Urutkan");
        comboSort.setLineColor(new java.awt.Color(255, 96, 0));
        comboSort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboSortMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboSortMousePressed(evt);
            }
        });
        comboSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSortActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-back-25.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        rowsPerPageComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rowsPerPageComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "25", "50", "100" }));
        rowsPerPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowsPerPageComboBoxActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-next-25.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin111, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tahunLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(sinopsisLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addComponent(btnSort, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rowsPerPageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(homePanelLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(btnSort))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tahunLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sinopsisLabel))
                    .addComponent(scrollPaneWin111, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rowsPerPageComboBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        mainPanel.add(homePanel, "card2");

        profilePanel.setBackground(new java.awt.Color(255, 255, 255));

        txtNama.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNama.setLabelText("Nama");
        txtNama.setLineColor(new java.awt.Color(255, 96, 0));
        txtNama.setSelectionColor(new java.awt.Color(255, 165, 89));

        txtUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUsername.setLineColor(new java.awt.Color(255, 96, 0));
        txtUsername.setSelectionColor(new java.awt.Color(255, 165, 89));
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtEmail.setLabelText("E-mail");
        txtEmail.setLineColor(new java.awt.Color(255, 96, 0));
        txtEmail.setSelectionColor(new java.awt.Color(255, 165, 89));

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPassword.setLineColor(new java.awt.Color(255, 96, 0));
        txtPassword.setSelectionColor(new java.awt.Color(255, 165, 89));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 165, 89));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("[PROFILE]");

        labelFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnFoto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnFoto.setText("PILIH FOTO");
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(69, 69, 69));
        btnSimpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimpanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSimpanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSimpanMouseExited(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-reset-20.png"))); // NOI18N
        jLabel18.setText("SIMPAN");

        javax.swing.GroupLayout btnSimpanLayout = new javax.swing.GroupLayout(btnSimpan);
        btnSimpan.setLayout(btnSimpanLayout);
        btnSimpanLayout.setHorizontalGroup(
            btnSimpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSimpanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        btnSimpanLayout.setVerticalGroup(
            btnSimpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSimpanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnEdit.setBackground(new java.awt.Color(255, 96, 0));
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditMouseExited(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-add-20.png"))); // NOI18N
        jLabel17.setText("EDIT");

        javax.swing.GroupLayout btnEditLayout = new javax.swing.GroupLayout(btnEdit);
        btnEdit.setLayout(btnEditLayout);
        btnEditLayout.setHorizontalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnEditLayout.setVerticalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePanelLayout.createSequentialGroup()
                        .addGap(0, 247, Short.MAX_VALUE)
                        .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePanelLayout.createSequentialGroup()
                                .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(205, 205, 205))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(556, 556, 556))
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel23)
                .addGap(66, 66, 66)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addComponent(labelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFoto)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );

        mainPanel.add(profilePanel, "card3");

        infoPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 165, 89));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("[INFO APLIKASI]");

        jLabel7.setFont(new java.awt.Font("Schadow BT", 1, 36)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logo (2).png"))); // NOI18N
        jLabel7.setText("CineGuide");

        infoLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        infoLabel.setText("infoLabel");

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel8.setText("Version 1.2");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Copyright © CineGuide 2023");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel7)
                            .addComponent(infoLabel))
                        .addGap(0, 750, Short.MAX_VALUE))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(infoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        mainPanel.add(infoPanel, "card5");

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    class editprofile extends UserMenu{
        String nama="",username="",email="",password="",foto="",id="";
        public editprofile(){
            nama = txtNama.getText();
            username = txtUsername.getText();
            email = txtEmail.getText();
            password = txtPassword.getText();
            id = txtID.getText();
        }
    }
    
    public void setNama(String nama) {
        this.nama = nama;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public void setFoto(String foto) {
        this.foto = foto;
    }
    
    public void setID(String id) {
        this.id = id;
    }

    public void tampilData() {
        try{
            Connection conn = k.getCon();
            Statement state = conn.createStatement();
            String sql = "SELECT * FROM user WHERE id_user = '" + this.id + "'";
            ResultSet res = state.executeQuery(sql);
            while(res.next()){
                this.filename = res.getString("foto");
                ImageIcon icon = new ImageIcon(res.getString("foto"));
                Image img = icon.getImage().getScaledInstance(labelFoto.getWidth(),
                    labelFoto.getHeight(), Image.SCALE_DEFAULT);
                ImageIcon ic = new ImageIcon(img);
                labelFoto.setIcon(ic);
            }
        }catch(SQLException  s){
        }
        
//        labelFoto.setIcon(ic);
        txtNama.setText(nama);
        txtUsername.setText(username);
        txtEmail.setText(email);
        String passwordDecrypt = getMD5Hash(txtPassword.getText()); 
        txtPassword.setText(passwordDecrypt);
        txtID.setText(id);
    }
    
    public void tampilTable (int currentPage) {
        
        try {
            int offset = (currentPage - 1) * rowsPerPage;
            this.stat = k.getCon().prepareStatement("SELECT * FROM film LIMIT " + rowsPerPage + " OFFSET " + offset);
            this.rs = this.stat.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblHome.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            while(rs.next()) {
                Object[] data = {
                    rs.getString("judul"),
                    rs.getString("tahun"),
                    rs.getString("negara"),
                    rs.getString("genre"),
                    rs.getString("pemeran_utama"),
                    rs.getString("sinopsis"),
                    };
                    model.addRow(data);
            }
            tblHome.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public void lebarKolom(){ 
        TableColumn column;
        tblHome.getTableHeader().setOpaque(false);
        tblHome.getTableHeader().setBackground(Color.WHITE);
        tblHome.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN); 
        column = tblHome.getColumnModel().getColumn(0); 
        column.setPreferredWidth(160); 
        column = tblHome.getColumnModel().getColumn(1); 
        column.setPreferredWidth(40); 
        column = tblHome.getColumnModel().getColumn(2); 
        column.setPreferredWidth(80); 
        column = tblHome.getColumnModel().getColumn(3); 
        column.setPreferredWidth(80);
        column = tblHome.getColumnModel().getColumn(4); 
        column.setPreferredWidth(150); 
        column = tblHome.getColumnModel().getColumn(5); 
        column.setPreferredWidth(210);
    }
    
    
    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseEntered

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        mainPanel.add(homePanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_homeMouseClicked

    private void homeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeMousePressed

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        //remove panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //add panel
        mainPanel.add(profilePanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_profileMouseClicked

    private void infoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoMouseClicked
        // TODO add your handling code here:
        //remove panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //add panel
        mainPanel.add(infoPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_infoMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        Masuk masuk = new Masuk();
        masuk.setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed
    private static String getMD5Hash(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            StringBuilder sb = new StringBuilder();
            for (byte b : messageDigest) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    private String encryptPassword(String password) {
        try {
            // Membuat instance MessageDigest dengan algoritma MD5
            MessageDigest md = MessageDigest.getInstance("MD5");

            // Mengubah password menjadi array byte
            byte[] passwordBytes = password.getBytes();

            // Melakukan hashing pada passwordBytes
            byte[] hashedBytes = md.digest(passwordBytes);

            // Mengubah hashedBytes menjadi representasi dalam bentuk hexadecimal
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedBytes) {
                sb.append(String.format("%02x", b));
            }

            // Mengembalikan hasil enkripsi
            return sb.toString();
        } catch (NoSuchAlgorithmException ex) {
            ex.printStackTrace();
        }

        return null;
    }
    private boolean checkUsernameExists(String username, String id) {
        try {
            String query = "SELECT * FROM user WHERE username = ? AND id_user != ?";
            PreparedStatement statement = k.getCon().prepareStatement(query);
            statement.setString(1, username);
            statement.setString(2, id);
            ResultSet resultSet = statement.executeQuery();
            return resultSet.next();
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    private boolean checkEmailExists(String email, String id) {
        try {
            String query = "SELECT * FROM user WHERE email = ? AND id_user != ?";
            PreparedStatement statement = k.getCon().prepareStatement(query);
            statement.setString(1, email);
            statement.setString(2, id);
            ResultSet resultSet = statement.executeQuery();
            return resultSet.next();
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
    private void btnSimpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpanMouseClicked
        // TODO add your handling code here:
         try {
            if (!Pattern.matches("^[a-zA-Z ]+$", txtNama.getText())) {
                JOptionPane.showMessageDialog(this, "Format Penulisan Nama Tidak Sesuai!");
            } else if (!Pattern.matches("^[a-zA-Z0-9 ]+$", txtUsername.getText())) {
                JOptionPane.showMessageDialog(this, "Format Penulisan Username Hanya Boleh Huruf dan Angka!");
            } else if (!Pattern.matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@"
                    + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$", txtEmail.getText())) {
                JOptionPane.showMessageDialog(this, "Format Penulisan Email Tidak Sesuai!");
            } else if (!Pattern.matches("^(?=.[a-zA-Z])|(?=.\\d).{8,}$", txtPassword.getText())) {
                JOptionPane.showMessageDialog(this, "Format Penulisan Password Hanya Huruf dan Angka Serta Min 8 Karakter");
            } else {
                String newpath = "src/upload";
                File directory = new File(newpath);
                if (!directory.exists()) {
                    directory.mkdirs();
                }
                Random rnd = new Random();
                int number = rnd.nextInt(999);
                File fileawal = null;
                File fileakhir = null;
                String ext = this.filename.substring(filename.lastIndexOf('.') + 1);
                fileawal = new File(filename);
                fileakhir = new File(newpath + "/" + txtID.getText() + "-" + number + "." + ext);
                System.out.println(fileakhir);

                // Mengecek keberadaan username dan email
                boolean isUsernameExists = checkUsernameExists(txtUsername.getText(), txtID.getText());
                boolean isEmailExists = checkEmailExists(txtEmail.getText(), txtID.getText());

                if (isUsernameExists) {
                    // Username sudah digunakan
                    JOptionPane.showMessageDialog(null, "Username sudah digunakan. Silakan pilih username lain.");
                    return;
                }

                if (isEmailExists) {
                    // Email sudah digunakan
                    JOptionPane.showMessageDialog(null, "Email sudah digunakan. Silakan gunakan email lain.");
                    return;
                }

                String encryptedPassword = encryptPassword(txtPassword.getText());
                editprofile edit = new editprofile();
                this.stat = k.getCon().prepareStatement("UPDATE `cineguide`.`user` SET `nama` = ?, `username` = ?, `email` = ?, `password` = ?, `foto` = ? WHERE id_user = ?");
                this.stat.setString(1, edit.nama);
                this.stat.setString(2, edit.username);
                this.stat.setString(3, edit.email);
                this.stat.setString(4, encryptedPassword);
                this.stat.setString(5, fileakhir.toString());
                this.stat.setString(6, edit.id);
                this.stat.executeUpdate();
                Files.copy(fileawal.toPath(), fileakhir.toPath());
                txtNama.setEditable(false);
                txtUsername.setEditable(false);
                txtEmail.setEditable(false);
                txtPassword.setEditable(false);
                btnSimpan.setEnabled(false);
                btnFoto.setEnabled(false);
                btnEdit.setEnabled(true);

                JOptionPane.showMessageDialog(null, "Profile Berhasil Diubah");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnSimpanMouseClicked

    private void btnSimpanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpanMouseEntered
        // TODO add your handling code here:
        btnSimpan.setBackground(panEnter);
    }//GEN-LAST:event_btnSimpanMouseEntered

    private void btnSimpanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpanMouseExited
        // TODO add your handling code here:
        btnSimpan.setBackground(panDefault);
    }//GEN-LAST:event_btnSimpanMouseExited

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        txtNama.setEditable(true);
        txtUsername.setEditable(true);
        txtEmail.setEditable(true);
        txtPassword.setEditable(true);
        btnSimpan.setEnabled(true);
        btnFoto.setEnabled(true);
        btnEdit.setEnabled(false);
    }//GEN-LAST:event_btnEditMouseClicked

    private void btnEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseEntered
        // TODO add your handling code here:
        btnEdit.setBackground(panDefault);
    }//GEN-LAST:event_btnEditMouseEntered

    private void btnEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseExited
        // TODO add your handling code here:
        btnEdit.setBackground(panEnter);
    }//GEN-LAST:event_btnEditMouseExited

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        // TODO add your handling code here:
        editprofile a = new editprofile();
        if (a.nama.equals("") || a.username.equals("") || a.email.equals("") || a.password.equals("")) {
            JOptionPane.showMessageDialog(null, "Isi Semua Data Terlebih Dahulu Sebelum Memilih Foto!");
        }else{
            try {
                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(null);
                File f = chooser.getSelectedFile();
                ImageIcon icon = new ImageIcon(f.toString());
                Image img = icon.getImage().getScaledInstance(labelFoto.getWidth(),
                    labelFoto.getHeight(), Image.SCALE_DEFAULT);
                ImageIcon ic = new ImageIcon(img);
                labelFoto.setIcon(ic);
                this.filename = f.getAbsolutePath();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnFotoActionPerformed

    private void tblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHomeMouseClicked
        int selectedRow = tblHome.getSelectedRow();
        String selectedValue = tblHome.getValueAt(selectedRow, 0).toString();
        try{
            Connection conn = k.getCon();
            Statement state = conn.createStatement();
            String sql = "SELECT * FROM film WHERE judul = '" + selectedValue + "'";
            ResultSet r = state.executeQuery(sql);
            while(r.next()){
                ImageIcon filmPoster = new ImageIcon(r.getString("poster"));
                Image scalingImage = filmPoster.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_DEFAULT);
                ImageIcon scaledFilmPoster = new ImageIcon(scalingImage);
                imageLabel.setIcon(scaledFilmPoster);
                titleLabel.setText(r.getString("judul"));
                tahunLabel.setText(r.getString("tahun"));
                String sinopsis = r.getString("sinopsis");
                String snp = "<html><body style='width: 180px;text-align:justify;'>" + sinopsis + "</body></html>";
                sinopsisLabel.setText(snp);
            }
        }catch(SQLException s){
            JOptionPane.showMessageDialog(null, s);
        }
    }//GEN-LAST:event_tblHomeMouseClicked
    private void cariData(String key){
        try{
            
            Connection conn= k.getCon();
            Statement st=conn.createStatement();
            DefaultTableModel model = (DefaultTableModel) tblHome.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            
            ResultSet RsProduk = st.executeQuery("SELECT * from film WHERE judul LIKE '%"+key+"%' OR tahun LIKE '%"+key+"%'OR negara LIKE '%"+key+"%'OR genre LIKE '%"+key+"%'OR pemeran_utama LIKE '%"+key+"%'OR sinopsis LIKE '%"+key+"%'");  
            while(RsProduk.next()){
                Object[] data={
                    RsProduk.getString("judul"),
                    RsProduk.getString("tahun"),
                    RsProduk.getString("negara"),
                    RsProduk.getString("genre"),
                    RsProduk.getString("pemeran_utama"),
                    RsProduk.getString("sinopsis")
                };
               model.addRow(data);
            }                
        } catch (Exception ex) {
        System.err.println(ex.getMessage());
        }
    }
    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        String key=txtCari.getText();
        System.out.println(key);
        if(key!=""){
            cariData(key);
        } else {
            tampilTable(currentPage);
        }
    }//GEN-LAST:event_txtCariKeyReleased
    private void sortData(String headerTabel) {
        // Dapatkan nama kolom database yang sesuai berdasarkan pemetaan
        String kolomDatabase = columnMapping.get(headerTabel);

        // Periksa apakah kolom yang dipilih sama dengan kolom sorting saat ini
        // Jika sama, ubah arah sorting
        if (headerTabel.equals(currentSortColumn)) {
            isAscending = !isAscending;
        } else {
            // Jika kolom yang dipilih berbeda dengan kolom sorting saat ini,
            // atur kolom sorting baru dan arah sorting ke ascending
            currentSortColumn = headerTabel;
            isAscending = true;
        }

        // Buat query SQL dengan menggunakan nama kolom database yang sesuai dan arah sorting
        String query = "SELECT * FROM film ORDER BY " + kolomDatabase + (isAscending ? " ASC" : " DESC");

        try {
            Connection conn = k.getCon();
            Statement stat = conn.createStatement();
            rs = stat.executeQuery(query);

            DefaultTableModel model = (DefaultTableModel) tblHome.getModel();
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            while (rs.next()) {
                Object[] data = new Object[6];
                data[0] = rs.getString("judul");
                data[1] = rs.getString("tahun");
                data[2] = rs.getString("negara");
                data[3] = rs.getString("genre");
                data[4] = rs.getString("pemeran_utama");
                data[5] = rs.getString("sinopsis");

                model.addRow(data);
            }

            tblHome.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // TODO add your handling code here:
        String selectedColumn = comboSort.getSelectedItem().toString();
        sortData(selectedColumn);
    }//GEN-LAST:event_btnSortActionPerformed

    private void comboSortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboSortMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_comboSortMouseClicked

    private void comboSortMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboSortMousePressed

    }//GEN-LAST:event_comboSortMousePressed

    private void comboSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSortActionPerformed
        // TODO add your handling code here:
        String selectedColumn = comboSort.getSelectedItem().toString();
        sortData(selectedColumn);
    }//GEN-LAST:event_comboSortActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        currentPage = 1; // Set currentPage ke halaman pertama
        tampilTable(currentPage); // Tampilkan data halaman pertama
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if (currentPage > 1) {
            currentPage--;
            tampilTable(currentPage);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void rowsPerPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowsPerPageComboBoxActionPerformed
        // TODO add your handling code here:
        // Perbarui nilai rowsPerPage sesuai dengan nilai yang dipilih oleh pengguna
        String selectedValue = rowsPerPageComboBox.getSelectedItem().toString();
        rowsPerPage = Integer.parseInt(selectedValue);

        // Tampilkan data ulang dengan currentPage saat ini
        tampilTable(currentPage);
    }//GEN-LAST:event_rowsPerPageComboBoxActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        int totalRows = getTotalRows();
        int totalPages = (int) Math.ceil((double) totalRows / rowsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            tampilTable(currentPage);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        int totalRows = getTotalRows();
        int totalPages = (int) Math.ceil((double) totalRows / rowsPerPage);
        currentPage = totalPages; // Set currentPage ke halaman terakhir
        tampilTable(currentPage); // Tampilkan data halaman terakhir
    }//GEN-LAST:event_btnLastActionPerformed
    private int getTotalRows() {
        try {
            Connection cn = k.getCon();
            Statement st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM film");
            if (rs.next()) {
                return rs.getInt(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JPanel btnSimpan;
    private javax.swing.JButton btnSort;
    private combobox.Combobox comboSort;
    private javax.swing.JPanel genreFilm;
    private javax.swing.JPanel home;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel info;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelFoto;
    private javax.swing.JPanel logout;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel profile;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JComboBox<String> rowsPerPageComboBox;
    private raven.scroll.win11.ScrollPaneWin11 scrollPaneWin111;
    private javax.swing.JLabel sinopsisLabel;
    private javax.swing.JLabel tahunLabel;
    private javax.swing.JTable tblHome;
    private javax.swing.JLabel titleLabel;
    private textfield.TextField txtCari;
    private cineguide.TextField txtEmail;
    private cineguide.TextField txtID;
    private cineguide.TextField txtNama;
    private cineguide.PasswordField txtPassword;
    private cineguide.TextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
